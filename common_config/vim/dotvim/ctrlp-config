" CtrlP vs Command T: https://news.ycombinator.com/item?id=4220227

" Use Git command for listing files, use find otherwise
" http://stackoverflow.com/a/26729140/200987
"let g:ctrlp_user_command = [
    "\ '.git', 'cd %s && git ls-files . -co --exclude-standard', 
    "\ 'find %s -type f'			
    "\ ]
    
" Just use the Silver Searcher. Comparable in speed to Git, but works
" everywhere
let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

" https://github.com/burke/matcher
let g:path_to_matcher = "$HOME/bin/matcher"

"let g:ctrlp_user_command = ['.git/', 'cd %s && git ls-files . -co --exclude-standard']

let g:ctrlp_match_func = { 'match': 'GoodMatch' }

function! GoodMatch(items, str, limit, mmode, ispath, crfile, regex)

  " Create a cache file if not yet exists
  let cachefile = ctrlp#utils#cachedir().'/matcher.cache'
  if !( filereadable(cachefile) && a:items == readfile(cachefile) )
    call writefile(a:items, cachefile)
  endif
  if !filereadable(cachefile)
    return []
  endif

  " a:mmode is currently ignored. In the future, we should probably do
  " something about that. the matcher behaves like "full-line".
  let cmd = g:path_to_matcher.' --limit '.a:limit.' --manifest '.cachefile.' '
  if !( exists('g:ctrlp_dotfiles') && g:ctrlp_dotfiles )
    let cmd = cmd.'--no-dotfiles '
  endif
  let cmd = cmd.a:str

  return split(system(cmd), "\n")

endfunction
" vi: ft=vim
